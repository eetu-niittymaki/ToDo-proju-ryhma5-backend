{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/AddTask.js","components/layout/Header.js","components/sounds/Play.js","components/sounds/SoundEffect.js","components/pages/TodoCalendar.js","components/Search.js","components/DeleteCompleted.js","App.js","reportWebVitals.js","index.js","components/Sorting.js"],"names":["TodoItem","getStyle","background","props","todo","is_done","textDecoration","this","id","task","priority","timestamp","due_date","className","style","color","defaultChecked","onChange","updateIsDone","bind","inputProps","aria-label","onClick","delTask","Component","Todos","todos","length","map","AddTask","onSubmit","e","a","preventDefault","state","axios","post","replace","c","toUpperCase","addTask","setState","target","name","value","date","type","placeholder","required","max","min","form","float","headerStyle","textAlign","padding","Header","to","Play","url","playStatus","Sound","status","PLAYING","loop","SoundEffect","playFromPosition","TodoCalendar","useState","Date","setDate","todoDates","convDate","i","split","navigator","userAgent","indexOf","push","tileClassName","tileContent","activeStartDate","tasks","view","toLocaleDateString","console","log","Search","search","val","fetch","res","json","filterTodos","handleSearch","handleChange","DeleteCompleted","deleteCompleted","window","confirm","delete","newTodos","handleDelete","App","componentDidMount","hr","getDate","put","Number","filter","newTodo","refresh","location","reload","today","day","month","getMonth","year","getFullYear","handleSorting","sortedTodos","src","autoPlay","muted","Sorting","exact","path","render","Fragment","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","sort_task","sort_priority","sort_due_date","sort","dynamicName","eval","method","sortObj","key"],"mappings":"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","file":"static/js/main.6c138300.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport \"../App.sass\";\r\n\r\nexport class TodoItem extends Component {\r\n\r\n  getStyle = () => {\r\n    return {\r\n      background: this.props.todo.is_done ? \"green\" : \"#fff\",\r\n      textDecoration: this.props.todo.is_done ? \"line-through\" : \"none\",\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id, task, priority, timestamp, due_date, is_done } = this.props.todo;\r\n    return (\r\n      <div className=\"todoItem\" style={this.getStyle()}>\r\n        <div className=\"checkbox\">\r\n            <Checkbox\r\n              color=\"primary\"\r\n              defaultChecked={is_done}\r\n              onChange={this.props.updateIsDone.bind(this, id)}\r\n              inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n        </div>\r\n          &nbsp;\r\n          <div className=\"todoTask\">{task}</div>\r\n          <div className=\"todoPriority\">{priority}</div>\r\n          <div className=\"todoDuedate\">Created: {timestamp} <br></br>Due date: {due_date}</div>\r\n          <div className=\"todoButton\">\r\n            <IconButton aria-label=\"Delete Todo\"\r\n              onClick={this.props.delTask.bind(this, id)}\r\n            >\r\n              <DeleteOutlined/>\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  updateIsDone: PropTypes.func.isRequired,\r\n  todo: PropTypes.object.isRequired,\r\n  delTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react'\r\nimport TodoItem from './TodoItem.js'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Todos extends Component {\r\n  render() {\r\n    if (this.props.todos.length === 0) {\r\n      return <div className = \"todosPlaceholder\">No Tasks</div>\r\n    }\r\n    return this.props.todos.map((todo) => (\r\n      <TodoItem key={todo.id} todo={todo} updateIsDone=\r\n      {this.props.updateIsDone} delTask={this.props.delTask}/>\r\n    ))\r\n  }\r\n}\r\n\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  updateIsDone: PropTypes.func.isRequired,\r\n  delTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todos;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\n\r\nexport class AddTask extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      todos: [],\r\n      date: \"\",\r\n    };\r\n}\r\n  // POST Todo\r\n  onSubmit = async e => {\r\n    e.preventDefault();\r\n    const {task, priority, due_date} = this.state \r\n    await axios.post(`https://tamk-4a00ez62-3001-group05.herokuapp.com/api`, {\r\n      task: (task.replace(/^\\w/, (c) => c.toUpperCase())),\r\n      priority: priority,\r\n      due_date: due_date,\r\n      is_done: false\r\n    })\r\n    // Sends values to App.js' addTask() function\r\n    this.props.addTask([\r\n      this.state.task.replace(/^\\w/, (c) => c.toUpperCase()),\r\n      this.state.priority,\r\n      this.state.due_date,\r\n      this.state.is_done\r\n    ]);\r\n  }\r\n  // Updates form values when changed and sets state according to them\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value })\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"addTodosContainer\">\r\n      <form\r\n        id=\"todos\"\r\n        className=\"inputFields\"\r\n        onSubmit={this.onSubmit}\r\n        // style={{ display: \"flex\", marginBottom: \"20px\" }}\r\n      >\r\n        <input\r\n          className=\"inputTask\"\r\n          type=\"text\"\r\n          name=\"task\"\r\n          // style={{ flex: \"10\", padding: \"5px\" }}\r\n          placeholder=\"Add Task...\"\r\n          value={this.state.task}\r\n          onChange={this.onChange}\r\n          required='required'\r\n        />\r\n        <input\r\n          className=\"inputPriority\"\r\n          type=\"number\"\r\n          max=\"10\"\r\n          min=\"1\"\r\n          name=\"priority\"\r\n          //  style={{ flex: \"5\", padding: \"5px\" }}\r\n          placeholder=\"Priority\"\r\n          value={this.state.priority}\r\n          onChange={this.onChange}\r\n          required='required'\r\n        />\r\n        <input\r\n          className=\"inputDuedate\"\r\n          type=\"date\"\r\n          name=\"due_date\"\r\n          // style={{ flex: \"5\", padding: \"5px\" }}\r\n          placeholder=\"Due date\"\r\n          value={this.state.due_date}\r\n          onChange={this.onChange}\r\n          required='required'\r\n          min={this.props.date}\r\n        />\r\n        <button\r\n          form=\"todos\"\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n          className=\"btn\"\r\n          style={{ float: \"1\" }}\r\n        >Submit\r\n        </button>\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddTask.propTypes = {\r\n  addTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTask;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../App.sass\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1 className=\"title\">Todo List</h1>\r\n      <div className=\"headerLink\">\r\n      <Link to=\"/\">Home</Link> |&nbsp;<Link to=\"/TodoCalendar\">Calendar</Link>{\" \"}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst headerStyle = {\r\n  color: \"#fff\",\r\n  textAlign: \"center\",\r\n  padding: \"20px\",\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Sound from \"react-sound\";\r\n\r\nexport class Play extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Sound\r\n          url=\"/sounds/backsound.wav\"\r\n          playStatus={Sound.status.PLAYING}\r\n          loop=\"true\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Play;","import React, { Component } from \"react\";\r\nimport Sound from \"react-sound\";\r\n\r\nexport class SoundEffect extends Component {\r\n  /* handleEffect = (num) => {\r\n    let url = \"\";\r\n    if (num === 1) {\r\n      url = \"/sounds/sound1.wav\";\r\n    } else if (num === 2) {\r\n      url = \"/sounds/sound1.wav\";\r\n    }\r\n    return url;\r\n  }; */\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Sound\r\n          url={\"/sounds/sound1.wav\"}\r\n          playStatus={Sound.status.PLAYING}\r\n          playFromPosition={300}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SoundEffect;","import React, { useState } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport \"../../App.sass\";\r\n\r\nconst TodoCalendar = (props) => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const todoDates = [];\r\n  let convDate = \"\";\r\n\r\n  for (let i = 0; i < props.todos.length; i++) {\r\n    convDate = props.todos[i].due_date.split(\"-\");\r\n    if (navigator.userAgent.indexOf(\"Firefox\") !== -1) {\r\n      convDate = convDate[2] + \".\" + convDate[1] + \".\" + convDate[0];\r\n    } else if (navigator.userAgent.indexOf(\"Chrome\") !== -1) {\r\n      convDate = convDate[1] + \"/\" + convDate[2] + \"/\" + convDate[0];\r\n    }\r\n    \r\n    todoDates.push(convDate);\r\n  }\r\n\r\n  const onChange = (date) => setDate(date);\r\n\r\n  const tileContentHandler = ({ activeStartDate, date, view }) => {\r\n    const tasks = [];\r\n    for (let i = 0; i < todoDates.length; i++) {\r\n      if (date.toLocaleDateString() === todoDates[i]) {\r\n        tasks.push(props.todos[i].task);\r\n      }\r\n    }\r\n    return <h5>{tasks}</h5>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"cal\">\r\n      <Calendar\r\n        className=\"calendar\"\r\n        onChange={onChange}\r\n        value={date}\r\n        tileClassName=\"calTile\"\r\n        tileContent={tileContentHandler}\r\n      />\r\n      {console.log(date.toLocaleDateString())}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoCalendar;","import React, { Component } from 'react';\r\nimport \"../App.sass\";\r\n\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      task: \"\",\r\n      filterTodos: \"\",\r\n    }\r\n  } \r\n  // Gets searched value from DB\r\n  search = async (val) => {\r\n    const res = await fetch(`https://tamk-4a00ez62-3001-group05.herokuapp.com/api?sort=timestamp&order_by=asc&task=${val}`)\r\n    const json = await res.json()\r\n    this.setState({ filterTodos: json })\r\n    this.handleSearch()\r\n  } \r\n  // Sends onChange value forward to search()\r\n  handleChange = async (e) => {\r\n    this.search(e.target.value)\r\n    this.setState({ task: e.target.value })\r\n  }\r\n\r\n  // Sends value forward to handle function in App.js\r\n  handleSearch = () => {\r\n    this.props.handleSearch(this.state.filterTodos)\r\n  }\r\n\r\n  render() {\r\n    return ( \r\n      <div>\r\n        <input \r\n          className=\"searchInput\"\r\n          value={this.state.task}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Search Task\" />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from \"react\"\r\nimport \"../App.sass\"\r\nimport axios from \"axios\"\r\n\r\nexport default class DeleteCompleted extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newTodos: [],\r\n    }\r\n  }\r\n\r\n  deleteCompleted = async () => {\r\n    const del = window.confirm(\"Delete completed tasks?\") // If user accepts sends DELETE request to backend\r\n    if (del) {\r\n      await axios.delete(`https://tamk-4a00ez62-3001-group05.herokuapp.com/api`)\r\n      const res = await fetch(`https://tamk-4a00ez62-3001-group05.herokuapp.com/api?sort=timestamp&order_by=asc&task=${this.props.search}`)\r\n      const json = await res.json()\r\n      this.setState({ newTodos: json })\r\n      this.handleDelete()\r\n    }\r\n  }\r\n  \r\n  // Sends value forward to handle function in App.js\r\n  handleDelete = () => {\r\n    this.props.handleDelete(this.state.newTodos)\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <button\r\n        className=\"deleteBtn\"\r\n        type=\"button\"\r\n        onClick={this.deleteCompleted}\r\n        >\r\n        Delete Completed\r\n      </button>\r\n    )\r\n  }\r\n}","import \"./App.sass\";\r\nimport React, { Component } from 'react'\r\nimport Todos from './components/Todos.js'\r\nimport AddTask from './components/AddTask.js'\r\nimport Header from './components/layout/Header.js'\r\nimport Play from \"./components/sounds/Play.js\";\r\nimport SoundEffect from \"./components/sounds/SoundEffect.js\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport TodoCalendar from \"./components/pages/TodoCalendar.js\";\r\nimport Sorting from \"./components/Sorting.js\"\r\nimport Search from \"./components/Search.js\"\r\nimport DeleteCompleted from \"./components/DeleteCompleted.js\"\r\nimport axios from 'axios';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      todos: [],\r\n      date: \"\",\r\n      search: \"\",\r\n    }\r\n  }\r\n\r\n  // GETs all when component mounts\r\n  componentDidMount = async () => {\r\n    let hr = await fetch(`https://tamk-4a00ez62-3001-group05.herokuapp.com/api?sort=timestamp&order_by=asc&task=${this.state.search}`)\r\n    let json = await hr.json()\r\n    this.setState({ todos: json })\r\n    this.getDate()\r\n  }\r\n\r\n  // Toggle checked/unchecked\r\n  updateIsDone = async id => {\r\n    this.setState({ todos: this.state.todos.map(todo => {  // Goes through each index of todos array and sets is_done \r\n      if(todo.id === id) {                                 // to its reverse value (0 or 1) if its id matches the id given as a parameter.\r\n        todo.is_done = !todo.is_done\r\n        axios.put(`https://tamk-4a00ez62-3001-group05.herokuapp.com/api/${id}`, {\r\n          is_done: todo.is_done            // Sends the reversed value to DB\r\n        })\r\n      }\r\n      return todo\r\n    })})\r\n  }\r\n\r\n  // DELETE Task\r\n  delTask = async id => {\r\n    const del = window.confirm('Delete task?')\r\n    if (del) {\r\n     await axios.delete(`https://tamk-4a00ez62-3001-group05.herokuapp.com/api/${Number(id)}`)    // Sends delete request to backend with id \r\n     this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] }) // Filter returns a new array that includes\r\n    }                                                                               // only vaslues wich pass arguments. In this case\r\n  }                                                                                 // it returns tasks with id's that are not the same as the \r\n                                                                                    // deleted ones.\r\n  // POST Task\r\n  addTask = (task, priority, due_date) => {\r\n    const newTodo = {\r\n      task: task,\r\n      priority: priority,\r\n      due_date: due_date,\r\n      is_done: false\r\n    }\r\n    this.setState({ todos: [...this.state.todos, newTodo] })\r\n    this.refresh()  \r\n  }\r\n\r\n  // Refreshes browser when called.\r\n  refresh = () => {\r\n    window.location.reload()\r\n  }\r\n\r\n  // Gets current date and adds it to state\r\n  getDate = () => {\r\n    let today = new Date()\r\n    let day = today.getDate()\r\n    let month = today.getMonth()+1\r\n    const year = today.getFullYear()\r\n  \r\n    if(day < 10) {\r\n        day = '0' + day\r\n    } \r\n  \r\n    if(month < 10) {\r\n        month = '0' + month \r\n    } \r\n  \r\n    today = year + '-' + month + '-' + day // Concatenates date to be YYYY/MM//DD \r\n    this.setState({ date: today })\r\n  }\r\n\r\n  // Sets state to be sorted tasks\r\n  handleSorting = (sortedTodos) => {\r\n    this.setState({ todos: sortedTodos })\r\n  }\r\n\r\n  // Sets new state after completed tasks have been deleted\r\n  handleDelete = (newTodos) => {\r\n    this.setState({ todos: newTodos })\r\n  }\r\n\r\n  // Sets todos to search result\r\n  handleSearch = (filterTodos) => {\r\n    this.setState({ todos: filterTodos })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <div className=\"container\">\r\n          <video src='/videos/video-1.mp4' autoPlay loop muted /> \r\n            <Play />\r\n            <SoundEffect />\r\n            <Header/>\r\n            <DeleteCompleted\r\n              todos={this.state.todos}\r\n              search={this.state.search}\r\n              handleDelete={this.handleDelete} />\r\n            <Search \r\n              handleSearch={this.handleSearch}\r\n               />\r\n            <Sorting \r\n              search={this.state.search}\r\n              handleSorting={this.handleSorting} />\r\n            <Route exact path=\"/\" render={props => (\r\n              <React.Fragment>\r\n                <AddTask \r\n                  addTask={this.addTask}\r\n                  date={this.state.date} />\r\n                <Todos \r\n                  todos={this.state.todos} \r\n                  updateIsDone={this.updateIsDone}\r\n                  delTask={this.delTask} />\r\n              </React.Fragment>\r\n            )} />\r\n           <Route\r\n              component={() => <TodoCalendar todos={this.state.todos} />}\r\n              path=\"/TodoCalendar\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","import React, { Component } from \"react\"\r\nimport \"../App.sass\"\r\n\r\nexport default class Sorting extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      sortedTodos: [],\r\n      sort_task: true,\r\n      sort_priority: true,\r\n      sort_due_date: true,\r\n    }\r\n    this.sort = this.sort.bind(this)\r\n  }\r\n\r\n  async sort (sort) { // Parameter from button press\r\n    const dynamicName = eval(`this.state.sort_${sort}`) // Evaluates string so it can be used as a concatenated dynamic variable name. \r\n    const method = (dynamicName) ? \"asc\" : \"desc\"       // Documentation says to never use eval() but I don't care.\r\n    const sortObj = {}         \r\n    const key = `sort_${sort}`  \r\n    const value = !dynamicName \r\n    sortObj[key] = value   // Creates a new dynamic object for individual boolean state changes for the sorting buttons.\r\n    let hr = await fetch(`https://tamk-4a00ez62-3001-group05.herokuapp.com/api?sort=${sort}&order_by=${method}&task=${this.props.search}`)\r\n    let json = await hr.json()\r\n    this.setState({ sortedTodos: json})\r\n    this.setState(sortObj)\r\n    this.handleSorting()\r\n  }\r\n  \r\n  // Sends value forward to handle function in App.js\r\n  handleSorting = () => {\r\n    this.props.handleSorting(this.state.sortedTodos)\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      // Function is called with different parameters, depending on which button user presses\r\n      <div className=\"sortContainer\">Sort By: \r\n        <button \r\n          type=\"button\"\r\n          className=\"sortBtn\"\r\n          onClick={() => this.sort(\"task\")} \r\n        > Task \r\n        </button>\r\n        <button \r\n          type=\"button\"\r\n          className=\"sortBtn\"\r\n          onClick={() => this.sort(\"priority\")}\r\n        > Priority \r\n        </button>\r\n        <button \r\n          type=\"button\"\r\n          className=\"sortBtn\"\r\n          onClick={() => this.sort(\"due_date\")}\r\n        > Due Date \r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}"],"sourceRoot":""}